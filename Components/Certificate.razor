@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop

<div class="wrapper">
    <div class="container">
        <div class="dates">
            <p>@ExpiresAt?.ToString("dd.MM.yyyy")</p>
            <p>@IssuedAt?.ToString("dd.MM.yyyy")</p>
        </div>
        <div class="line" style="background-color: @LineColor;"></div>
        <div class="cert-container">
            <div class="cert-container-image" style="background-image: url('@ImageUrl')"></div>
            <div class="title-container">
                <h3>@Title</h3>
                <button class="oi oi-badge" @onclick="() => OpenPDF(PdfUrl)">
                   <span class="badge oi oi-badge"></span>
                   <span class="button-span">View Certificate</span>
                </button>
            </div>
            <p>Issued by @Issuer</p>
            <p>@Description</p>

            <hr>
            <div class="skills-container">
            @if (Skills != null)
            {
                @foreach (var skill in Skills) 
                {
                    <p 
                    class="skill-card" 
                    style="border-left: 4px solid @BorderColorLeft; 
                           border-right: 1px solid @BorderColor; 
                           border-bottom: 1px solid @BorderColor;
                           border-top: 1px solid @BorderColor;">
                    @skill</p>
                }
            }
            </div>
        </div>
    </div> 
</div>


@code {
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public string? Issuer { get; set; }
    [Parameter]
    public string? Description { get; set; }
    [Parameter]
    public DateTime? IssuedAt { get; set; }
    [Parameter]
    public DateTime? ExpiresAt { get; set; }
    [Parameter]
    public List<string>? Skills { get; set; }
    [Parameter]
    public string? ImageUrl { get; set; }
    [Parameter]
    public string? PdfUrl { get; set; }
    [Parameter]
    public string? BorderColorLeft { get; set; }
    [Parameter]
    public string? BorderColor { get; set; }
    [Parameter]
    public string? LineColor { get; set; }

    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    private async Task OpenPDF(string pdfUrl)
    {
        var absoluteUrl = NavigationManager.ToAbsoluteUri(pdfUrl).ToString();
        await JSRuntime.InvokeVoidAsync("open", absoluteUrl, "_blank");
    }
}